import logging
from aiogram import Bot
from aiogram.types import BotCommand
from aiogram.utils.keyboard import ReplyKeyboardBuilder
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton


logger = logging.getLogger(__name__)


# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–ø–ª–∞–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
async def buttons(buttons_lst: list, width: int = 3) -> ReplyKeyboardMarkup:

    """
    –°–æ–∑–¥–∞—ë—Ç —Ç–µ–∫—Å—Ç–æ–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∫–Ω–æ–ø–æ–∫

    Parameters
    ----------
    buttons_lst : list
        –°–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ–¥ –∫–Ω–æ–ø–∫–∏

    width : int
        –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ —Å—Ç—Ä–æ–∫–µ

    Returns
    -------
    keyboard : ReplyKeyboardMarkup
        –¢–µ–∫—Å—Ç–æ–≤–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∫–Ω–æ–ø–æ–∫
    """

    repl_list = []

    for i in range(0, len(buttons_lst), width):

        lst = []

        for j in range(width):

            if i + j < len(buttons_lst):

                if buttons_lst[i + j] is not None:

                    lst.append(KeyboardButton(text=buttons_lst[i + j]))

        repl_list.append(lst)

    keyboard = ReplyKeyboardMarkup(keyboard=repl_list, resize_keyboard=True)

    return keyboard


async def set_main_menu(bot: Bot):

    main_menu_commands = [

        BotCommand(command='/start', description='–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ üöÄ'),

        BotCommand(command='/help', description='–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞'),

        BotCommand(command='/history', description='–ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤'),

        BotCommand(command='/low', description='–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫'),

        BotCommand(command='/high', description='–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫')

    ]

    await bot.set_my_commands(main_menu_commands)


async def phone_btn():
    kb_builder = ReplyKeyboardBuilder()

    contact_btn = KeyboardButton(text='–ú–æ–π –Ω–æ–º–µ—Ä', request_contact=True)

    kb_builder.row(contact_btn)

    key_phone = kb_builder.as_markup(resize_keyboard=True, one_time_keyboard=True)

    return key_phone
