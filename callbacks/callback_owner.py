import logging
from db import User
from datetime import datetime
from states import default_state
from buttons import inline_buttons
from aiogram import Router, F, Bot
from filters import IsOwner, throttle
from setting import load_config, Config
from aiogram.types import CallbackQuery
from aiogram.filters import StateFilter
from aiogram.exceptions import TelegramBadRequest
from aiogram.client.default import DefaultBotProperties
from storage import menu_stats_desc, stat_menu, owner_menu_desc, owner_menu, search_menu_desc, search_menu


# --------------------------------- CONFIGURATION ---------------------------------


owner_call_router = Router()

config: Config = load_config()

logger = logging.getLogger(__name__)

bot = Bot(token=config.tg_bot.token, default=DefaultBotProperties(parse_mode="HTML"))


# --------------------------------- MENU ---------------------------------


# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
@owner_call_router.callback_query(F.data == "üîë –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ üîë", IsOwner(), StateFilter(default_state))
@throttle(2)
async def statistic_user(callback: CallbackQuery) -> None:
    """
    –ü–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–≤–µ—Å—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –∏ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–º

    Parameters
    ----------
    callback : CallbackQuery
        –ö—ç–ª–±—ç–∫-–∑–∞–ø—Ä–æ—Å –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏

    Returns
    -------
    None
    """
    conn = User.select()
    new_conn = conn.dicts()
    all_user = len(list(new_conn))

    data_now = datetime.now().replace(microsecond=0)

    user_today = User.select().where(User.date_reg >= data_now.replace(hour=0, minute=0, second=0))
    new_user_today = user_today.dicts()
    all_user_today = len(list(new_user_today))

    await callback.message.edit_text(text=menu_stats_desc.format(all_user, all_user_today, data_now),
                                     reply_markup=await inline_buttons(buttons_lst=stat_menu))


# –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
@owner_call_router.callback_query(F.data == "–û–±–Ω–æ–≤–∏—Ç—å üîÑ", IsOwner(), StateFilter(default_state))
@throttle(2)
async def statistic_user_repeat(callback: CallbackQuery) -> None:
    """
    –ü–æ–∑–≤–æ–ª—è–µ—Ç –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –∏ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–º

    Parameters
    ----------
    callback : CallbackQuery
        –ö—ç–ª–±—ç–∫-–∑–∞–ø—Ä–æ—Å –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏

    Returns
    -------
    None
    """
    conn = User.select()
    new_conn = conn.dicts()
    all_user = len(list(new_conn))

    data_now = datetime.now().replace(microsecond=0)

    user_today = User.select().where(User.date_reg >= data_now.replace(hour=0, minute=0, second=0))
    new_user_today = user_today.dicts()
    all_user_today = len(list(new_user_today))

    await callback.message.edit_text(text=menu_stats_desc.format(all_user, all_user_today, data_now),
                                     reply_markup=await inline_buttons(buttons_lst=stat_menu))


# --------------------------------- OTHERS ---------------------------------


# –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –≤–ª–∞–¥–µ–ª—å—Ü–µ–º
@owner_call_router.callback_query(F.data == "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", IsOwner(), StateFilter(default_state))
@throttle(2)
async def go_main_menu_own(callback: CallbackQuery) -> None:
    """
    –ü–æ–∑–≤–æ–ª—è–µ—Ç –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é

    Parameters
    ----------
    callback : CallbackQuery
        –ö—ç–ª–±—ç–∫-–∑–∞–ø—Ä–æ—Å –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏

    Returns
    -------
    None
    """
    await callback.message.edit_text(text=owner_menu_desc, reply_markup=await inline_buttons(buttons_lst=owner_menu))


# –§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –∫—Ä–∏—Ç–µ—Ä–∏—è–º –ø–æ–∏—Å–∫–∞ –∏–∑ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –≤–ª–∞–¥–µ–ª—å—Ü–µ–º
@owner_call_router.callback_query(F.data == "–í–µ—Ä–Ω—É—Ç—å—Å—è ‚ÜòÔ∏è", IsOwner(), StateFilter(default_state))
@throttle(2)
async def comeback_menu_own(callback: CallbackQuery) -> None:
    """
    –ü–æ–∑–≤–æ–ª—è–µ—Ç –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –ø–æ–∏—Å–∫–∞ –∏–∑ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏

    Parameters
    ----------
    callback : CallbackQuery
        –ö—ç–ª–±—ç–∫-–∑–∞–ø—Ä–æ—Å –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏

    Raises
    ------
    TelegramBadRequest
        –õ–æ–≤–∏—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è

    Returns
    -------
    None
    """
    try:
        await callback.message.delete()

    except TelegramBadRequest:
        pass

    await callback.message.answer(text=search_menu_desc, disable_notification=True,
                                  reply_markup=await inline_buttons(buttons_lst=search_menu))


# –§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏–∑ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –≤–ª–∞–¥–µ–ª—å—Ü–µ–º
@owner_call_router.callback_query(F.data == "–í—ã–π—Ç–∏ ‚èèÔ∏è", IsOwner(), StateFilter(default_state))
@throttle(2)
async def comeback_menu_own_now(callback: CallbackQuery) -> None:
    """
    –ü–æ–∑–≤–æ–ª—è–µ—Ç –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏–∑ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏

    Parameters
    ----------
    callback : CallbackQuery
        –ö—ç–ª–±—ç–∫-–∑–∞–ø—Ä–æ—Å –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏

    Raises
    ------
    TelegramBadRequest
        –õ–æ–≤–∏—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è

    Returns
    -------
    None
    """
    try:
        await callback.message.delete()

    except TelegramBadRequest:
        pass

    await callback.message.answer(text=owner_menu_desc, disable_notification=True,
                                  reply_markup=await inline_buttons(buttons_lst=owner_menu))
